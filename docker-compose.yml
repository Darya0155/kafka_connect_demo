version: '2.1'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: docker.io/deepakarya0155/kubenatiesspringhelloworld:0.0.3
    ports:
      - "8089:8089"
    environment:
      app_name: docker
      spring_cloud_stream_kafka_binder_brokers: kafka1:19092
    depends_on:
      - kafka1
      - zoo1

    networks:
      - msk-demo-network
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - msk-demo-network

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    depends_on:
      - zoo1
    networks:
      - msk-demo-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - zoo1
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: wizard_test
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:19092,kafka2:19093
    networks:
      - msk-demo-network
  mysql-db:
    container_name: msk_demo_db
    image: mysql
    mem_limit: 500m
    ports:
      - "3306:3306"
    depends_on:
      - kafka1
      - zoo1
    environment:
      MYSQL_ROOT_PASSWORD: admin
    networks:
      - msk-demo-network
  kafka_connect:
    container_name: kafka_connect_debezium
    image: debezium/connect:2.6
    ports:
      - '8083:8083'
    depends_on:
      - kafka1
      - zoo1
    environment:
      BOOTSTRAP_SERVERS: kafka1:19092
      GROUP_ID: medium_debezium
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_REPLICATION_FACTOR: 1
    networks:
      - msk-demo-network
networks:
  msk-demo-network: